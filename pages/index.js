import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import {useState} from 'react';
import {BsSearch} from 'react-icons/bs';
import Weather from '@/components/Weather';
import Spinner from '../components/Spinner';

require('dotenv').config()



export default function Home() {

  const [city, setCity] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  // const api = process.env.NEXT_PUBLIC_WEATHER_KEY;
  const api = 'be3764a1695042cedab57f46346f74d9';
  const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${api}`
  const fetchWeather = (e) => {
    e.preventDefault();
    setLoading(true);
    axios.get(url).then((response)=>{
      setWeather(response.data)
      console.log(response.data)
    }).catch((error)=>{
      console.log(error);
    })
    setCity('')
    setLoading(false)
  }

  if(loading){
    return <Spinner/>
  } else{
    return (
      <div>
        <Head>
          <title>Weather Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* overlay */}
        <div className='w-full absolute top-0 left-0 bottom-0 bg-black/40 z-[0]'/>
        <Image
          // src='https://images.unsplash.com/photo-1584267385494-9fdd9a71ad75?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80'
          src='https://images.unsplash.com/photo-1592210454359-9043f067919b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8d2VhdGhlcnxlbnwwfHwwfHx8MA%3D%3D&auto=format&fit=crop&w=500&q=60'
          fill='true'
          className='object-cover z-[-1]'
          alt='bg'
        />
  
        {/* Search */}
  
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-10'>
          <form onSubmit={fetchWeather} className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'>
            <div>
              <input 
                onChange={(e)=>{
                  setCity(e.target.value)
                }}
                type="text" 
                placeholder='Search City' 
                className='bg-transparent border-none text-white focus:outline-none text-2xl'
              />
            </div>
            <button onClick={fetchWeather}>
              <BsSearch size={20}/>
            </button>
          </form>
        </div>
        {/* Weather */}
        {/* <Weather/> */}
        {weather.main && <Weather data={weather}/> }
  
      </div>
    );

  }

  
}
